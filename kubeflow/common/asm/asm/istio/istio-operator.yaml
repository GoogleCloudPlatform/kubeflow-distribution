apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
spec:
  profile: empty
  hub: gcr.io/gke-release/asm # {"$ref":"#/definitions/io.k8s.cli.setters.anthos.servicemesh.hub"}
  tag: 1.9.0-asm.3 # {"$ref":"#/definitions/io.k8s.cli.setters.anthos.servicemesh.tag"}
  meshConfig:
    trustDomainAliases: # {"$ref":"#/definitions/io.k8s.cli.setters.anthos.servicemesh.trustDomainAliases"}
    - PROJECT.svc.id.goog # {"$ref":"#/definitions/io.k8s.cli.substitutions.trust-domain"}
    trustDomain: PROJECT.svc.id.goog # {"$ref":"#/definitions/io.k8s.cli.substitutions.trust-domain"}
    defaultConfig:
      proxyMetadata:
        GKE_CLUSTER_URL: "https://container.googleapis.com/v1/projects/PROJECT/locations/us-central1-c/clusters/asm-cluster" # {"$ref":"#/definitions/io.k8s.cli.substitutions.gke-cluster-url"}
        GCP_METADATA: "PROJECT|PROJECT_NUMBER|asm-cluster|us-central1-c" # {"$ref":"#/definitions/io.k8s.cli.substitutions.gke-metadata"}
        CA_PROVIDER: "GoogleCA"
        PLUGINS: "GoogleTokenExchange"
        USE_TOKEN_FOR_CSR: "true"
        GCE_METADATA_HOST: "metadata.google.internal"
    # Protocol detection timeout is not supported
    protocolDetectionTimeout: 0s
    # Locality load balancing is not supported
    localityLbSetting:
      enabled: false
  components:
    base:
      enabled: true
    egressGateways:
    - enabled: false
      name: istio-egressgateway
      k8s:
        hpaSpec:
          maxReplicas: 5
          minReplicas: 2
    ingressGateways:
    - enabled: true
      name: istio-ingressgateway
      k8s:
        hpaSpec:
          maxReplicas: 5
          minReplicas: 2
    # The default profile is tuned to fit on smaller clusters.
    # Increase cpu req to ensure we can handle larger scale clusters.
    pilot:
      enabled: true
      k8s:
        resources:
          requests:
            cpu: 500m
        hpaSpec:
          minReplicas: 2
        replicaCount: 2
        env:
        - name: GKE_CLUSTER_URL
          value: "https://container.googleapis.com/v1/projects/PROJECT/locations/us-central1-c/clusters/asm-cluster" # {"$ref":"#/definitions/io.k8s.cli.substitutions.gke-cluster-url"}
        - name: GCP_METADATA
          value: "PROJECT|PROJECT_NUMBER|asm-cluster|us-central1-c" # {"$ref":"#/definitions/io.k8s.cli.substitutions.gke-metadata"}
        - name: SPIFFE_BUNDLE_ENDPOINTS
          value: "PROJECT.svc.id.goog|https://storage.googleapis.com/mesh-ca-resources/spiffe_bundle.json" # {"$ref":"#/definitions/io.k8s.cli.substitutions.spiffe-bundle-endpoints"}
        - name: ENABLE_STACKDRIVER_MONITORING
          value: "true" # {"$ref":"#/definitions/io.k8s.cli.setters.anthos.servicemesh.controlplane.monitoring.enabled"}
        - name: TOKEN_AUDIENCES
          value: "istio-ca,PROJECT.svc.id.goog" # {"$ref":"#/definitions/io.k8s.cli.substitutions.token-audiences"}
        - name: PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION
          value: "true"
  values:
    # Protocol sniffing is not supported
    pilot:
      enableProtocolSniffingForOutbound: false
      enableProtocolSniffingForInbound: false
    # Enable telemetry v2 backend by Stackdriver.
    # Prometheus is also supported with --set values.telemetry.v2.prometheus.enabled=true --set prometheus.enabled=true
    telemetry:
      enabled: true
      v2:
        enabled: true
        prometheus:
          enabled: false
        stackdriver:
          enabled: true
          inboundAccessLogging: "FULL"
          outboundAccessLogging: "ERRORS_ONLY"
          topology: true
    sidecarInjectorWebhook:
      rewriteAppHTTPProbe: true
    global:
      caAddress: "meshca.googleapis.com:443"
      pilotCertProvider: kubernetes
      sts:
        servicePort: 15463
      sds:
        token:
          aud: "PROJECT.svc.id.goog" # {"$ref":"#/definitions/io.k8s.cli.substitutions.trust-domain"}
      multiCluster:
        # Provided to ensure a human readable name rather than a UUID.
        clusterName: "cn-PROJECT-us-central1-c-asm-cluster" # {"$ref":"#/definitions/io.k8s.cli.substitutions.cluster-name"}
      meshID: "proj-PROJECT_NUMBER" # {"$ref":"#/definitions/io.k8s.cli.substitutions.mesh-id"}
      network: "NETWORK_ID" # {"$ref":"#/definitions/io.k8s.cli.substitutions.network"}
